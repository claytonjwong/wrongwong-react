{"version":3,"sources":["shared/baseUrl.js","components/HomeComponent.js","components/FoodComponent.js","components/MoveComponent.js","components/MindsetComponent.js","components/ToolsComponent.js","components/SocialComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","Home","react_default","a","createElement","Jumbotron","class","src","role","data-toggle","data-html","title","data-placement","href","target","Food","className","Move","Mindset","Tools","Fragment","Social","isNumber","val","isNaN","Number","required","length","maxLength","len","minLength","Component","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNav","bind","assertThisInitialized","state","isNavOpen","isModalOpen","toggleModal","handleLogin","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","react_router_dom","to","Button","Modal","toggle","ModalHeader","ModalBody","Footer","dishesLoading","type","dishesFailed","errmess","payload","addDishes","dishes","commentsFailed","addComments","comments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","leaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","HeaderComponent","TransitionGroup","CSSTransition","key","location","classNames","timeout","react_router","path","component","HomeComponent","dish","filter","featured","isLoading","dishesErrMess","errMess","promotion","promotions","promo","promosErrMess","leader","leaderLoading","leaderErrMess","FooterComponent","withRouter","connect","dispatch","postComment","dishId","rating","author","comment","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","Content-Type","credentials","then","response","ok","error","Error","status","statusText","message","json","catch","console","log","resetFeedbackForm","actions","reset","postFeedback","firstname","lastname","telnum","email","canContact","contactMethod","canConact","newFeedback","Dishes","arguments","undefined","action","objectSpread","Comments","concat","Promotions","Leaders","InitialFeedback","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","es","MainComponent","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ca7e881.chunk.js","sourcesContent":["export const baseUrl = \"http://localhost:3001/\";","import React from 'react';\nimport { Jumbotron } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nconst Home = () => {\n    return (\n        <Jumbotron>\n            <div class=\"container\">\n                <div class=\"row row-header align-items-center\">\n                    <div class=\"col-12 col-md-8\">\n                        <div class=\"row justify-content-center top-margin\">\n                            <div class=\"col-auto text-center\">\n                                <h1>Ankylosing Spondylitis</h1>\n                            </div>\n                        </div>\n\n                        <div class=\"media row justify-content-center\">\n                            <img class=\"img-fluid rounded\" src=\"assets/images/header.png\" />\n                            <div class=\"media-body d-none d-sm-block\">\n                                <p>\n                                    Hi, my name is Clayton Wong.  Explore my lifestyle changes\n                                    which reduce inflammation and pain caused by this rare autoimmune disease.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col col-md\">\n                        <div class=\"row justify-content-center\">\n                            <div class=\"col-auto\"><i class=\"fa fa-medkit fa-5x mb-3\"></i></div>\n                        </div>\n                        <div class=\"col\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-auto col-sm-auto\">\n                                    <a role=\"button\" class=\"btn btn-block nav-link btn-warning\" data-toggle=\"tooltip\" data-html=\"true\"\n                                       title=\"<div class='white-anchor'><a href='https://www.spondylitis.org/Ankylosing-Spondylitis' target='_blank'>Spondylitis Association<br/><strong>www.spondylitis.org</strong></a></div>\"\n                                       data-placement=\"bottom\" href=\"https://www.spondylitis.org/Ankylosing-Spondylitis\" target=\"_blank\">\n                                        <strong>What is AS ?</strong>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Jumbotron>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { Fade, Stagger } from 'react-animation-components';\n\nconst Food = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <span class=\"jumbotron\">Food</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Food;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst Move = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <span class=\"jumbotron\">Move</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Move;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nconst Mindset = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <span class=\"jumbotron\">Mindset</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Mindset;","import React from 'react';\n\nconst Tools = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<span>Tools</span>\n\t\t</React.Fragment>\n\t);\n};\nexport default Tools;","import React from 'react';\n\nconst Social = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<span>Social</span>\n\t\t</React.Fragment>\n\t);\n};\nexport default Social;","import React, { Component } from 'react';\nimport {\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\n    Button, Modal, ModalHeader, ModalBody, Label, Row\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst RenderComments = ({comments, postComment, dishId}) => {\n    if (comments == null) {\n        return (\n            <React.Fragment></React.Fragment>\n        );\n    }\n\n    const commentListItems = comments.map((comment) => {\n        return (\n            <Fade in>\n                <li key={comment.id}>\n                    <span>{comment.comment}</span>\n                    <br />\n                    <span>-- {comment.author} , {new Date(comment.date).toDateString()}</span>\n                    <br /><br />\n                </li>\n            </Fade>\n        );\n    });\n\n    return (\n        <div>\n            <h4>Comments</h4>\n                <ul className=\"list-unstyled\">\n                    <Stagger in>\n                        {commentListItems}\n                    </Stagger>\n                </ul>\n            <CommentForm dishId={dishId} postComment={postComment} />\n        </div>\n    );\n}\n\nconst Comments = (props) => {\n    return (\n        <RenderComments\n            comments={props.comments}\n            postComment={props.postComment}\n            dishId={props.dish.id}\n        />\n    );\n}\n\nconst RenderDishDetail = ({dish}) => {\n    if (dish == null) {\n        return (\n            <React.Fragment></React.Fragment>\n        );\n    }\n    return(\n        <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\n            <Card>\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n}\n\nconst DishDetail = ({dish, comments, postComment, isLoading, errMess}) => {\n    if (isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (dish != null) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDishDetail dish={dish} />\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <Comments dish={dish} comments={comments} postComment={postComment} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nconst isNumber = (val) => !isNaN(Number(val));\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg\"></i>\n                    {' '}Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody className=\"m-3\">\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select className=\"form-control\"\n                                        model=\".rating\" name=\"rating\"\n                                        validators={{\n                                            isNumber\n                                        }} >\n                                    <option hidden>Select</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </Row>\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".rating\"\n                                show=\"touched\"\n                                messages={{\n                                    isNumber: 'Invalid Rating!'\n                                }}\n                            />\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text className=\"form-control\"\n                                    model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                />\n                            </Row>\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".author\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required! ',\n                                    minLength: 'Must be greater than 2 characters!',\n                                    maxLength: 'Must be 15 characters or less!'\n                                }}\n                            />\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\">Comment</Label>\n                                <Control.textarea className=\"form-control\"\n                                    model=\".comment\" id=\"comment\" name=\"comment\" rows={6}\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                />\n                            </Row>\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".comment\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required! ',\n                                    minLength: 'Must be greater than 2 characters!'\n                                }}\n                            />\n                            <Button type=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport {\n    Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value +\n              \"Password: \" + this.password.value +\n              \"Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/food'><span className=\"fa fa-cutlery fa-lg\"></span> Food</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/move'><span className=\"fa fa-child fa-lg\"></span> Move</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/mindset'><span className=\"fa fa-smile-o fa-lg\"></span> Mindset</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/tools'><span className=\"fa fa-wrench fa-lg\"></span> Tools</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/social'><span className=\"fa fa-wrench fa-lg\"></span> Social</NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button className=\"btn btn-block btn-danger\" onClick={this.toggleModal}>\n                                    <i className=\"fa fa-book fa-lg\"></i>\n                                    {' '}Disclaimer\n                                </Button>\n                            </NavItem>\n                        </Nav>\n                    </div>\n                </Navbar>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Medical Information Disclaimer</ModalHeader>\n                    <ModalBody>\n<p>1. Credit</p>\n<p>1.1 This document was created using a template from SEQ Legal (https://seqlegal.com).\nYou must retain the above credit. Use of this document without the credit is an infringement of\ncopyright. However, you can purchase from us an equivalent document that does not include the credit.</p>\n<p>2. No advice</p>\n<p>2.1 Our website contains general medical information.</p>\n<p>2.2 The medical information is not advice and should not be treated as such.</p>\n<p>3. No warranties</p>\n<p>3.1 The medical information on our website is provided without any representations or warranties,\nexpress or implied.</p>\n<p>3.2 Without limiting the scope of Section 3.1, we do not warrant or represent that the medical\ninformation on this website:</p>\n<p>(a) will be constantly available, or available at all; or</p>\n<p>(b) is true, accurate, complete, current or non-misleading.</p>\n<p>4. Medical assistance</p>\n<p>4.1 You must not rely on the information on our website as an alternative to medical advice from\nyour doctor or other professional healthcare provider.</p>\n<p>4.2 If you have any specific questions about any medical matter, you should consult your doctor or\nother professional healthcare provider.</p>\n<p>4.3 If you think you may be suffering from any medical condition, you should seek immediate\nmedical attention.</p>\n<p>4.4 You should never delay seeking medical advice, disregard medical advice or discontinue medical\ntreatment because of information on our website.</p>\n<p>5. Interactive features</p>\n<p>5.1 Our website includes interactive features that allow users to communicate with us.</p>\n<p>5.2 You acknowledge that, because of the limited nature of communication through our website's\ninteractive features, any assistance you may receive using any such features is likely to be\nincomplete and may even be misleading.</p>\n<p>5.3 Any assistance you may receive using any our website's interactive features does not constitute\nspecific advice and accordingly should not be relied upon without further independent\nconfirmation.</p>\n<p>6. Limits upon exclusions of liability</p>\n<p>6.1 Nothing in this disclaimer will:</p>\n<p>(a) limit or exclude any liability for death or personal injury resulting from negligence;</p>\n<p>(b) limit or exclude any liability for fraud or fraudulent misrepresentation;</p>\n<p>(c) limit any liabilities in any way that is not permitted under applicable law; or</p>\n<p>(d) exclude any liabilities that may not be excluded under applicable law.</p>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                          121, Clear Water Bay Road<br />\n                          Clear Water Bay, Kowloon<br />\n                          HONG KONG<br />\n                          <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                          <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                          <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                             confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then( response => dispatch(addComment(response)))\n    .catch(error => {\n        console.log('Post comments', error.message)\n        alert('Your comment could not be posted\\nError: ' + error.message);\n    });\n};\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, canConact, contactMethod, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        canContact: canConact,\n        contactMethod: contactMethod,\n        message: message\n    };\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n    .then(response => response.json())\n    .then( response => dispatch(addFeedback(response)))\n    .then( response => {\n        alert('Reponse: ' + JSON.stringify(response.payload));\n    })\n    .catch(error => {\n        console.log('Post comments', error.message)\n        alert('Your comment could not be posted\\nError: ' + error.message);\n    });\n};","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\n\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Food from './FoodComponent';\nimport Move from './MoveComponent';\nimport Mindset from './MindsetComponent';\nimport Tools from './ToolsComponent';\nimport Social from './SocialComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => { dispatch(fetchDishes()) },\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n    fetchComments: () => { dispatch(fetchComments()) },\n    fetchPromos: () => { dispatch(fetchPromos()) },\n    fetchLeaders: () => { dispatch(fetchLeaders()) },\n    postFeedback: (firstname, lastname, telnum, email, canContact, contactMethod, message) =>\n        dispatch(postFeedback(firstname, lastname, telnum, email, canContact, contactMethod, message))\n})\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishesErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promosLoading={this.props.promotions.isLoading}\n                    promosErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            );\n        };\n        return (\n            <React.Fragment>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch>\n                            <Route path=\"/home\" component={HomePage} />\n                            <Route path=\"/food\" component={Food} />\n                            <Route path=\"/move\" component={Move} />\n                            <Route path=\"/mindset\" component={Mindset} />\n                            <Route path=\"/tools\" component={Tools} />\n                            <Route path=\"/social\" component={Social} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />                \n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (\n        state = {\n            isLoading: true,\n            errMess: null,\n            dishes: []\n        }, action) => {\n\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload };\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: [] };\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        errMess: null,\n        comments: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload, comments: []};\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            console.log(\"Comment: \", comment);\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload };\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: [] };\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: [] };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []};\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n    \n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}